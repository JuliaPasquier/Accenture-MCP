{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Julia\\\\OneDrive\\\\Documents\\\\AccentureChallenge\\\\accenture-MVP\\\\client\\\\src\\\\pages\\\\DashboardAdmin.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DashboardAdmin = () => {\n  const employees = [{\n    id: 1,\n    name: \"John Doe\",\n    firstName: \"John\",\n    lastName: \"Doe\",\n    address: \"123 Main St\"\n  }, {\n    id: 2,\n    name: \"Jane Smith\",\n    firstName: \"Jane\",\n    lastName: \"Smith\",\n    address: \"456 Elm St\"\n  }\n  // Add more employees here\n  ];\n  const clients = [{\n    id: 1,\n    name: \"BNP\",\n    firstName: \"John\",\n    lastName: \"Doe\",\n    address: \"123 Main St\"\n  }, {\n    id: 2,\n    name: \"MICROSOFT\",\n    firstName: \"Jane\",\n    lastName: \"Smith\",\n    address: \"456 Elm St\"\n  }\n  // Add more clients here\n  ];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-black text-2xl text-center font-bold mb-4\",\n      children: \"Dashboard Admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-black text-center\",\n      children: \"Vous \\xEAtes connect\\xE9 en tant qu'administrateur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center flex-col text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"mt-11 border border-purple-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-black text-3xl font-bold mb-4 border  border-purple-800 uppercase \",\n              children: \"Employ\\xE9s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"text-black text-3xl mb-4 font-bold border uppercase\",\n              children: \"Clients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: employees.map(employee => {\n            var _clients$find, _clients$find2, _clients$find3, _clients$find4;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: [employee.firstName, \" \", employee.lastName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 37\n                }, this), employee.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [(_clients$find = clients.find(client => client.id === employee.id)) === null || _clients$find === void 0 ? void 0 : _clients$find.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 37\n                }, this), (_clients$find2 = clients.find(client => client.id === employee.id)) === null || _clients$find2 === void 0 ? void 0 : _clients$find2.firstName, \" \", (_clients$find3 = clients.find(client => client.id === employee.id)) === null || _clients$find3 === void 0 ? void 0 : _clients$find3.lastName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 37\n                }, this), (_clients$find4 = clients.find(client => client.id === employee.id)) === null || _clients$find4 === void 0 ? void 0 : _clients$find4.address]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this)]\n            }, employee.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = DashboardAdmin;\nexport default DashboardAdmin;\nvar _c;\n$RefreshReg$(_c, \"DashboardAdmin\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardAdmin","employees","id","name","firstName","lastName","address","clients","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","employee","_clients$find","_clients$find2","_clients$find3","_clients$find4","find","client","_c","$RefreshReg$"],"sources":["C:/Users/Julia/OneDrive/Documents/AccentureChallenge/accenture-MVP/client/src/pages/DashboardAdmin.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst DashboardAdmin = () => {\r\n    const employees = [\r\n        { id: 1, name: \"John Doe\", firstName: \"John\", lastName: \"Doe\", address: \"123 Main St\" },\r\n        { id: 2, name: \"Jane Smith\", firstName: \"Jane\", lastName: \"Smith\", address: \"456 Elm St\" },\r\n        // Add more employees here\r\n    ];\r\n\r\n    const clients = [\r\n        { id: 1, name: \"BNP\", firstName: \"John\", lastName: \"Doe\", address: \"123 Main St\" },\r\n        { id: 2, name: \"MICROSOFT\", firstName: \"Jane\", lastName: \"Smith\", address: \"456 Elm St\" },\r\n        // Add more clients here\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"text-black text-2xl text-center font-bold mb-4\">Dashboard Admin</h1>\r\n            <p className=\"text-black text-center\">Vous êtes connecté en tant qu'administrateur</p>\r\n\r\n            <div className=\"flex justify-center flex-col text-center\">\r\n                <table className=\"mt-11 border border-purple-800\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th className=\"text-black text-3xl font-bold mb-4 border  border-purple-800 uppercase \">Employés</th>\r\n                            <th className=\"text-black text-3xl mb-4 font-bold border uppercase\">Clients</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {employees.map((employee) => (\r\n                            <tr key={employee.id}>\r\n                                <td>\r\n                                    {employee.firstName} {employee.lastName}\r\n                                    <br />\r\n                                    {employee.address}\r\n                                </td>\r\n                                <td>\r\n                                    {clients.find((client) => client.id === employee.id)?.name}\r\n                                    <br />\r\n                                    {clients.find((client) => client.id === employee.id)?.firstName}{\" \"}\r\n                                    {clients.find((client) => client.id === employee.id)?.lastName}\r\n                                    <br />\r\n                                    {clients.find((client) => client.id === employee.id)?.address}\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DashboardAdmin;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}